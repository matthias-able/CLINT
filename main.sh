#!/bin/bash

# script to automate RESP calulation for mPEG molecul plus a Iodid ion in direct vicinity


mkdir -p "/home/matthiasable/automated_test_run"


# path to output files of MD calc
prmtop="/home/matthiasable/700mPEG2_700iodide_01.prmtop"
gro="/home/matthiasable/centered.gro"

# path to python script gen_amber_ESP_input.py
gen_amber_ESP_input="/home/matthiasable/gen_amber_ESP_input.py"

# path to faked respin files for RESP charge calculation with AMBER
respin1filepath="/home/matthiasable/plus.respin1"
respin2filepath="/home/matthiasable/plus.respin2"


# repeat the calculation for the Iodin ions with following resid number
for ion in 46 274 148 280 390 648
do

echo "Processing ion: $ion"

# create directory for each ion
path="/home/matthiasable/automated_test_run/plus$ion"
mkdir -p $path
  
# step into directory
cd $path



###########################################################################################################
# Preparations for gaussian ESP calc
###########################################################################################################

# generate prmtop and rst7 file for resid 701 and all 6 surrounding ions  

# write this to cpptraj.in
cat <<EOT > "$path/cpptraj.in"
parm $prmtop
trajin $gro
reference $gro

strip !(:$ion|:701)  outprefix  plus_ion_$ion
trajout plus_ion_$ion.rst7
EOT


# perform cpptraj
cpptraj -i cpptraj.in


# prepate gaussian input with amb2oniom.py
amb2oniom.py -p plus_ion_$ion.700mPEG2_700iodide_01.prmtop -c plus_ion_$ion.rst7 -o plus_ion_$ion.com -hi :1,2 -route "# HF/GenECP SCF=tight Test Pop=(MK,ReadRadii) iop(6/33=2, 6/42=6)"


#cut everything after the atom definitions

# hardcoded!!
# only works for 1 iodid + the molecule
# couldnt figure out how to use strip flag in amb2oniom
sed -i '55,$d' "$path/plus_ion_$ion.com"


#write the following below the atom definitions with a blank line in between
# Basis set 6-31G* for atoms C, H, O, or N
# Basis set Def2SVP for atoms I
# MK radius for atom 53 is 2.3 Angstrom: Van der Waals radius of iodid used

cat <<EOT >> "$path/plus_ion_$ion.com"
C H O N 0
6-31G*
****
I 0
Def2SVP
****

I 0
Def2SVP

53 2.59


EOT
    


###########################################################################################################
# Perform gaussian ESP calc
###########################################################################################################

echo Waiting for Gaussian to finish ESP charge calculation

# run Gaussian in the background
rung16 "$path/plus_ion_$ion.com" 



###########################################################################################################
# Preparations for AMBER RESP calc
###########################################################################################################

echo Executing Python script to generate AMBER ESP input file

# generate the AMBER ESP input file plus_ion_XX_python.esp 
# with gen_amber_ESP_input.py
python3 $gen_amber_ESP_input "$path/plus_ion_$ion.log"



###########################################################################################################
# Perform AMBER RESP calc
###########################################################################################################
# using the faked respin1 and respin2 files 
# can be generated by amber for only calculation

echo Executing RESP charge calculation

resp -O -i $respin1filepath -o only.respout1 -e plus_ion_${ion}_python.esp  -t qout_stage1
resp -O -i $respin2filepath -o only.respout2 -e plus_ion_${ion}_python.esp  -q qout_stage1 -t qout_stage2

# qout_stage2 contains RESP charges

echo Finished: qout_stage2 contains RESP charges for ion $ion


done

###########################################################################################################
# Plot the RESP charges
###########################################################################################################
# when the calculations for the 6 ions are finished, step into directories and import qout_stage2 files to np
# plot the charges
echo Plot the RESP charges to plot.png

cd /home/matthiasable/
python3 plot.py